module alu32(out, overflow, zero, negative, A, B, control);
    output [31:0] out;
    output        overflow, zero, negative;
    input  [31:0] A, B;
    input   [2:0] control;
    wire carry[32:1];

   	alu1  	alu1(out[0],carry[1],A[0],B[0],control,control[0]);
    alu1    alu2(out[1],carry[2],A[1],B[1],control,carry[1]);
	alu1	alu3(out[2],carry[3],A[2],B[2],control,carry[2]);
	alu1	alu4(out[3],carry[4],A[3],B[3],control,carry[3]);
	alu1	alu5(out[4],carry[5],A[4],B[4],control,carry[4]);
	alu1	alu6(out[5],carry[6],A[5],B[5],control,carry[5]);
	alu1	alu7(out[6],carry[7],A[6],B[6],control,carry[6]);
	alu1	alu8(out[7],carry[8],A[7],B[7],control,carry[7]);
	alu1	alu9(out[8],carry[9],A[8],B[8],control,carry[8]);
	alu1	alu10(out[9],carry[10],A[9],B[9],control,carry[9]);
	alu1	alu11(out[10],carry[11],A[10],B[10],control,carry[10]);
	alu1	alu12(out[11],carry[12],A[11],B[11],control,carry[11]);
	alu1	alu13(out[12],carry[13],A[12],B[12],control,carry[12]);
	alu1	alu14(out[13],carry[14],A[13],B[13],control,carry[13]);
	alu1	alu15(out[14],carry[15],A[14],B[14],control,carry[14]);
	alu1	alu16(out[15],carry[16],A[15],B[15],control,carry[15]);
	alu1	alu17(out[16],carry[17],A[16],B[16],control,carry[16]);
	alu1	alu18(out[17],carry[18],A[17],B[17],control,carry[17]);
	alu1	alu19(out[18],carry[19],A[18],B[18],control,carry[18]);
	alu1	alu20(out[19],carry[20],A[19],B[19],control,carry[19]);
	alu1	alu21(out[20],carry[21],A[20],B[20],control,carry[20]);
	alu1	alu22(out[21],carry[22],A[21],B[21],control,carry[21]);
	alu1	alu23(out[22],carry[23],A[22],B[22],control,carry[22]);
	alu1	alu24(out[23],carry[24],A[23],B[23],control,carry[23]);
	alu1	alu25(out[24],carry[25],A[24],B[24],control,carry[24]);
	alu1	alu26(out[25],carry[26],A[25],B[25],control,carry[25]);
	alu1	alu27(out[26],carry[27],A[26],B[26],control,carry[26]);
	alu1	alu28(out[27],carry[28],A[27],B[27],control,carry[27]);
	alu1	alu29(out[28],carry[29],A[28],B[28],control,carry[28]);
	alu1	alu30(out[29],carry[30],A[29],B[29],control,carry[29]);
	alu1	alu31(out[30],carry[31],A[30],B[30],control,carry[30]);
	alu1	alu32(out[31],carry[32],A[31],B[31],control,carry[31]);
	nor nr1(zero, out[31:0],carry[32]);
	negative = out[31];
	xor xo2(overflow,carry[31],carry[32]);
endmodule // alu32
